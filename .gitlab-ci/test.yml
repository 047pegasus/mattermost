.test-setup:
  stage: test
  image: $CI_REGISTRY/images/kube-ci:1.19.4-3
  variables:
    KUBECONFIG: /kubeconfig
  before_script:
    - |
      function get_pod_name() {
        if [ -n "$1" ]; then
          kubectl get pod -n mm-ci -l=com.mattermost/component="$1",com.mattermost.ci/id="${CI_PIPELINE_ID}",com.mattermost.ci/for="${TEST_SCOPE}" -o jsonpath='{.items[0].metadata.name}'
        fi
      }
      apk add --no-cache gettext
      echo ${kube_config} | base64 -d > ${KUBECONFIG}

    - |
      cat <<EOF >>build/kustomization.yaml
      namePrefix: "ci-${CI_PIPELINE_ID}-${TEST_SCOPE}-"
      commonLabels:
        com.mattermost.ci/id: "${CI_PIPELINE_ID}"
        com.mattermost.ci/for: "${TEST_SCOPE}"
        com.mattermost.ci/branch: "${CI_COMMIT_BRANCH}"
      EOF

    - |
      envsubst < ./build/dotenv/test.env > ./build/dotenv/test.env.tmp
      cat ./build/dotenv/test.env.tmp > ./build/dotenv/test.env
      kustomize build build/ | kubectl -n mm-ci apply -f -

    - |
      echo "Waiting for all services to become ready"
      sleep 5s
      kubectl wait -n mm-ci --for=condition=ready pod -l=com.mattermost.ci/id="${CI_PIPELINE_ID}",com.mattermost.ci/for="${TEST_SCOPE}" --timeout=5m
      sleep 30s

    - kubectl exec -n mm-ci -t $(get_pod_name "minio") -- sh -c 'mkdir -p /data/mattermost-test'
    - cat tests/test-data.ldif | kubectl exec -n mm-ci -t $(get_pod_name "openldap") -- bash -c 'ldapadd -x -D "cn=admin,dc=mm,dc=test,dc=com" -w mostest'
  after_script:
    - kustomize build build/ | kubectl -n mm-ci delete -f -

.test:
  extends: .test-setup
  script:
    - mkdir -p client/plugins
    - mkdir -p build/test-results
    - mkdir -p build/logs

    # todo: remove setting GOBIN here, once circleci can be removed (see build/dotenv/test.env)

    - |
      printf "\033[36m==> Copying files to build-server-${TEST_SCOPE}\033[0m\n"
      kubectl cp -n mm-ci $CI_PROJECT_DIR $(get_pod_name "build-server-${TEST_SCOPE}"):/build

      printf "\033[36m==> TODO\033[0m\n"
      kubectl exec -n mm-ci -t $(get_pod_name "build-server-${TEST_SCOPE}") -- bash -c 'cd /build/mattermost-server; MM_SQLSETTINGS_DATASOURCE='"${MM_SQLSETTINGS_DATASOURCE}"' MM_SQLSETTINGS_DRIVERNAME='"${MM_SQLSETTINGS_DRIVERNAME}"' BUILD_NUMBER='"${CI_COMMIT_SHA}"' ./scripts/test.sh "go" "" "$(go list ./... | grep -v ./data)" "." "" "/build/mattermost-server/bin"'
      kubectl logs -n mm-ci $(get_pod_name "build-server-${TEST_SCOPE}")

    # - docker-compose logs --tail="all" -t --no-color > logs/docker-compose_logs
    # - docker ps -a --no-trunc > logs/docker_ps
    # - docker stats -a --no-stream > logs/docker_stats
    # - tar -czvf logs/docker_logs.tar.gz logs/docker-compose_logs logs/docker_ps logs/docker_stats
    # - cp ../report.xml test-results
    # - DOCKER_EXIT_CODE=$(docker inspect server --format='{{.State.ExitCode}}')
    # - echo $DOCKER_EXIT_CODE
    # - exit $DOCKER_EXIT_CODE
  artifacts:
    paths:
      - build/logs
    reports:
      junit: build/test-results/report.xml
    expire_in: 7 days
