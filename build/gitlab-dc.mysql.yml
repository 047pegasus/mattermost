version: '3'
services:
  mysql:
    image: "mysql:5.6"
    container_name: mysql_5.6
    restart: always
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: mostest
      MYSQL_PASSWORD: mostest
      MYSQL_USER: mmuser
      MYSQL_DATABASE: mattermost_test
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 3
    tmpfs: /var/lib/mysql
    volumes:
      - "./docker/mysql.conf.d:/etc/mysql/conf.d"
    networks:
      schemamysql:
        aliases:
          - mysql
  mysql-read-replica:
    image: "mysql:5.7"
    container_name: mysql_replica_ro_5.7
    restart: always
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: mostest
      MYSQL_PASSWORD: mostest
      MYSQL_USER: mmuser
      MYSQL_DATABASE: mattermost_test
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 3
    volumes:
      - "./docker/mysql.conf.d:/etc/mysql/conf.d"
    networks:
      schemamysql:
        aliases:
          - mysql-replica-ro
  ## START SAME CONFIG(extends does not work with some docker-compose versions unfortunately)
  minio:
    image: "minio/minio:RELEASE.2019-10-11T00-38-09Z"
    container_name: minio
    command: "server /data"
    environment:
      MINIO_ACCESS_KEY: minioaccesskey
      MINIO_SECRET_KEY: miniosecretkey
      MINIO_SSE_MASTER_KEY: "my-minio-key:6368616e676520746869732070617373776f726420746f206120736563726574"
    networks:
      schemamysql:
        aliases:
          - minio
  inbucket:
    image: "inbucket/inbucket:stable"
    container_name: inbucket
    restart: always
    networks:
      schemamysql:
        aliases:
          - inbucket
  openldap:
    image: "osixia/openldap:1.4.0"
    container_name: openldap
    restart: always
    environment:
      LDAP_TLS_VERIFY_CLIENT: "never"
      LDAP_ORGANISATION: "Mattermost Test"
      LDAP_DOMAIN: "mm.test.com"
      LDAP_ADMIN_PASSWORD: "mostest"
    networks:
      schemamysql:
        aliases:
          - openldap
  elasticsearch:
    image: "mattermost/mattermost-elasticsearch-docker:6.5.1"
    container_name: elasticsearch
    environment:
      http.host: "0.0.0.0"
      http.port: 9200
      http.cors.enabled: "true"
      http.cors.allow-origin: "http://localhost:1358,http://127.0.0.1:1358"
      http.cors.allow-headers: "X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      http.cors.allow-credentials: "true"
      transport.host: "127.0.0.1"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    networks:
      schemamysql:
        aliases:
          - elasticsearch
  dejavu:
    image: "appbaseio/dejavu:3.4.2"
    container_name: dejavu
    networks:
      schemamysql:
        aliases:
          - dejavu
  keycloak:
    image: "jboss/keycloak:10.0.2"
    container_name: keycloak
    restart: always
    environment:
      KEYCLOAK_USER: mmuser
      KEYCLOAK_PASSWORD: mostest
      DB_VENDOR: h2
      KEYCLOAK_IMPORT: /setup/realm.json
    volumes:
     - "./docker/keycloak:/setup"
    networks:
      schemamysql:
        aliases:
          - keycloak
  prometheus:
    image: "prom/prometheus"
    container_name: prometheus
    volumes:
      - "./docker/prometheus${IS_LINUX}.yml:/etc/prometheus/prometheus.yml"
    networks:
      schemamysql:
        aliases:
          - prometheus
  grafana:
    image: "grafana/grafana"
    container_name: grafana
    volumes:
     - "./docker/grafana/grafana.ini:/etc/grafana/grafana.ini"
     - "./docker/grafana/provisioning:/etc/grafana/provisioning"
     - "./docker/grafana/dashboards:/var/lib/grafana/dashboards"
    networks:
     schemamysql:
       aliases:
         - grafana
  ## END SAME CONFIG

  start_dependencies:
    image: mattermost/mattermost-wait-for-dep:latest
    depends_on:
      - mysql
      - minio
      - inbucket
      - openldap
      - elasticsearch
      - prometheus
      - grafana
    command: mysql:3306 minio:9000 inbucket:10080 openldap:389 elasticsearch:9200 prometheus:9090 grafana:3000
    networks:
     schemamysql:

networks:
  schemamysql:
    external: true
    name: ${COMPOSE_PROJECT_NAME}_schemamysql
