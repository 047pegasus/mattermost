name: Server Test Template
on:
  workflow_call:
    inputs:
      datasource:
        required: true
        type: string
      drivername:
        required: true
        type: string
env:
  go-version: "1.19.5"
jobs:
  test:
    runs-on: ubuntu-latest-8-cores
    env:
      COMPOSE_PROJECT_NAME: ghactions
      BUILD_IMAGE: mattermost/mattermost-build-server:20230118_golang-1.19.5
    steps:
      - name: Checkout mattermost project
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: Setup Go
        uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version: ${{ env.go-version }}
          cache-dependency-path: server/go.sum
      - name: Run docker compose
        run: |
          cd server/build
          docker-compose --no-ansi run --rm start_dependencies
          cat ../tests/test-data.ldif | docker-compose --no-ansi exec -T openldap bash -c 'ldapadd -x -D "cn=admin,dc=mm,dc=test,dc=com" -w mostest';
          docker-compose --no-ansi exec -T minio sh -c 'mkdir -p /data/mattermost-test';
          docker-compose --no-ansi ps
          cd ..
      - name: Wait for docker compose
        run: |
          until docker network inspect ghactions_mm-test; do echo "Waiting for Docker Compose Network..."; sleep 1; done;
          docker run --net ghactions_mm-test appropriate/curl:latest sh -c "until curl --max-time 5 --output - http://mysql:3306; do echo waiting for mysql; sleep 5; done;"
          docker run --net ghactions_mm-test appropriate/curl:latest sh -c "until curl --max-time 5 --output - http://elasticsearch:9200; do echo waiting for elasticsearch; sleep 5; done;"
      - name: Compile Tests
        run: |
          cd server
          make test-compile
      - name: Run Tests
        run: |
          if [[ ${{ github.ref_name }} == 'master' ]]; then
            export RACE_MODE="-race"
          fi
          # --ulimit nofile=8096:8096 \
          cd server
          export CI_INBUCKET_HOST=localhost
          export CI_MINIO_HOST=localhost
          export CI_INBUCKET_PORT=9001
          export CI_MINIO_PORT=9000
          export CI_INBUCKET_SMTP_PORT=10025
          export CI_LDAP_HOST=localhost
          export IS_CI=true
          export MM_EMAILSETTINGS_SMTPSERVER=localhost
          export MM_EMAILSETTINGS_SMTPPORT=10025
          export MM_ELASTICSEARCHSETTINGS_CONNECTIONURL=http://localhost:9200
          export MM_SQLSETTINGS_DRIVERNAME="${{ inputs.drivername }}"
          export MM_SQLSETTINGS_DATASOURCE="${{ inputs.datasource }}"
          export TEST_DATABASE_MYSQL_DSN="${{ inputs.datasource }}"
          export TEST_DATABASE_POSTGRESQL_DSN="${{ inputs.datasource }}"
          make test-server$RACE_MODE BUILD_NUMBER=$GITHUB_HEAD_REF-$GITHUB_RUN_ID
      - name: Archive report.xml
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: report-xml
          path: report.xml
      - name: Archive gotestsum.json
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: gotestsum-json
          path: gotestsum.json
